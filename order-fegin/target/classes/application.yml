eureka:
  client:
    registerWithEureka: true # 表示是否注册自身到eureka服务器，
    fetchRegistry: true # 是否从eureka上获取注册信息
    #客户端间隔30秒重新获取eureka上的信息
    registry-fetch-interval-seconds: 30
    serviceUrl:
      defaultZone: http://admin:123@localhost:8088/eureka/,http://admin:123@localhost:8089/eureka/
  #心跳检测与续约时间
  #测试时将值设置小些，保证服务关闭后注册中心能及时踢出服务
  instance:
    #Eureka客户端向服务发送心跳的时间间隔，单位为秒(客户端会告诉服务端按照这个规则)
    lease-renewal-interval-in-seconds: 1
    #Eureka服务端在收到最后一次心跳之后等待的时间上线，单位为秒，超过踢出(客户端告诉服务端按照这个规则)
    lease-expiration-duration-in-seconds: 2
    instance-id: ${spring.cloud.client.ip-address}:${server.port}
    prefer-ip-address: true #使用ip注册

server:
  port: 8011

management:
  endpoints:
    web:
      exposure:
        include: "*"
        #exclude: env,beans #排除
      #base-path: #2.0前默认/，2.0之后默认/actuator
  endpoint:
    health:
      show-details: ALWAYS
    logfile:
      enabled: true #可在线查看日志
#logging:
#  file: ##这里的日志读取的实际上是这个应用的logfile指定的文件，所以被观察的应用必须要指定logging.file的值。

spring:
#服务名称
  application:
    name: order-feign
  boot:
    admin:
      client:
        url: http://localhost:8010


#配置熔断器
hystrix:
  #threadpool:
  command:
    default:
      fallback:
        enabled: true #当执行失败或者请求被拒绝，是否会尝试调用hystrixCommand.getFallback() 。默认true
      circuitBreaker:
        sleepWindowInMilliseconds: 5 #短路多久以后开始尝试是否恢复，默认5s
        forceOpen: false #强制打开熔断器，如果打开这个开关，那么拒绝所有request，默认false
      coreSize: 10 #并发执行的最大线程数，默认10
      execution:
        timeout:
          enabled: true #执行是否启用超时，默认启用true
        isolation:
          strategy: THREAD #隔离策略，默认是Thread, 可选Thread｜Semaphore
          thread:
            interruptOnTimeout: true #发生超时是是否中断，默认true
            timeoutInMilliseconds: 5000 #超时时间

#使用本段配置，feign会自动断路
feign:
  hystrix:
    enabled: true #开启hystrix,# 在feign中开启hystrix功能，默认情况下feign不开启hystrix功能，一定要将这里开启否则就无法进行降级

